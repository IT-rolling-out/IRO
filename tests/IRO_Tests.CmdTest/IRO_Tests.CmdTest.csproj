<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <Version>1.2.1</Version>
    <Description>Сборка предоставляет мощный инструмент для постоения консольных приложений. CmdLine позволяет сгенерировать cli из методов класса-наследника CommandLineBase. Создайте такой класс и пропишите в нем методы, которые должны быть доступны в консоли, отметьте их атрибутом [CmdInfo].

Запустите и пропишите команду help чтоб посмотреть доступные методы. В самом CmdLineFacade рекомендуется использовать protected свойство Cmd. В нем есть все для ввода/вывода не только строк, но и комплексных объектов, что очень ускоряет работу. Особое внимание обратите на метод Cmd.ReadResource. Также вы можете передать параметры в метод при вызове команды. Пример: copy /path:"E\\qwe" /overwrite:true Таким образом вы можете вызвать команду передав параметры запуска приложения. Это очень удобно для написания утилит командной строки. Пример реализации такого - FilesReplacerUtil.</Description>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="IRO.Storage.JsonFileStorage" Version="1.0.7" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\IRO.CmdLine\IRO.CmdLine.csproj" />
  </ItemGroup>

  

</Project>
